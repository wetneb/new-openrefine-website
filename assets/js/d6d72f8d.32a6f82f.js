"use strict";(self.webpackChunkOpenRefine_Documentation=self.webpackChunkOpenRefine_Documentation||[]).push([[8922],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>d});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),u=l(n),d=o,m=u["".concat(c,".").concat(d)]||u[d]||f[d]||i;return n?r.createElement(m,a(a({ref:t},s),{},{components:n})):r.createElement(m,a({ref:t},s))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=u;var p={};for(var c in t)hasOwnProperty.call(t,c)&&(p[c]=t[c]);p.originalType=e,p.mdxType="string"==typeof e?e:o,a[1]=p;for(var l=2;l<i;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},6656:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>c,default:()=>u,frontMatter:()=>p,metadata:()=>l,toc:()=>s});var r=n(7462),o=n(3366),i=(n(7294),n(3905)),a=["components"],p={title:"Give to OpenRefine",description:"Your donations help further develop and maintain OpenRefine.",hide_table_of_contents:!0},c="Give to OpenRefine",l={type:"mdx",permalink:"/new-openrefine-website/donate",source:"@site/src/pages/donate.md",title:"Give to OpenRefine",description:"Your donations help further develop and maintain OpenRefine.",frontMatter:{title:"Give to OpenRefine",description:"Your donations help further develop and maintain OpenRefine.",hide_table_of_contents:!0}},s=[],f={toc:s};function u(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"give-to-openrefine"},"Give to OpenRefine"),(0,i.kt)("p",null,"Your donations help further maintain and further develop OpenRefine. Thank you for your support!"),(0,i.kt)("script",{src:"https://donorbox.org/widget.js",paypalExpress:"true"}),(0,i.kt)("iframe",{src:"https://donorbox.org/embed/open-refine",name:"donorbox",allowpaymentrequest:"allowpaymentrequest",seamless:"seamless",frameborder:"0",scrolling:"no",width:"100%",style:{maxWidth:"500px",minWidth:"250px",minHeight:"460px",maxHeight:"none!important"}}),(0,i.kt)("p",null,"OpenRefine is a fiscally sponsored project of ",(0,i.kt)("a",{parentName:"p",href:"https://codeforscience.org"},"Code for Science & Society Inc."),". Donations are tax deductible to the extent allowed by law in the US. Tax ID 81-3791683."),(0,i.kt)("p",null,"You can also support OpenRefine via ",(0,i.kt)("a",{href:"https://github.com/sponsors/OpenRefine"},"GitHub Sponsors"),"."))}u.isMDXComponent=!0}}]);